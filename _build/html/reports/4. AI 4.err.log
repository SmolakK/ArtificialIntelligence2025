Traceback (most recent call last):
  File "C:\Users\kamil\AppData\Roaming\Python\Python39\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\ProgramData\Anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression

def true(X):
    return np.sin(1.5 * np.pi * X)

np.random.seed(0)

degrees = [1, 5, 30]

X = np.linspace(0,1,30).reshape(-1,1)
y = true(X) + np.random.randn(30).reshape(-1,1) * 0.1


plt.figure(figsize=(10,5))
for i in range(len(stopnie)):
    ax = plt.subplot(1, len(degrees), i + 1)
    plt.setp(ax, xticks=(), yticks=())

    poly = PolynomialFeatures(degree=stopnie[i],
                                             include_bias=False)
    reg = LinearRegression()
    poly_features = poly.fit_transform(X)
    reg.fit(poly_features,y)
    
    X_test = np.linspace(0, 1, 100)
    plt.plot(X, reg.predict(poly_features), label="Model", ls='--', c = 'r')
    plt.plot(X, true(X), label="True")
    plt.scatter(X, y, edgecolor='b', s=20, label="Samples")
    plt.xlabel("x")
    plt.ylabel("y")
    plt.legend(loc="best")
    plt.title("Sum of errors:"+str(sumv2(reg.predict(poly_features),y)))
plt.show()
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
Input [1;32mIn [9][0m, in [0;36m<cell line: 18>[1;34m()[0m
[0;32m     14[0m y [38;5;241m=[39m true(X) [38;5;241m+[39m np[38;5;241m.[39mrandom[38;5;241m.[39mrandn([38;5;241m30[39m)[38;5;241m.[39mreshape([38;5;241m-[39m[38;5;241m1[39m,[38;5;241m1[39m) [38;5;241m*[39m [38;5;241m0.1[39m
[0;32m     17[0m plt[38;5;241m.[39mfigure(figsize[38;5;241m=[39m([38;5;241m10[39m,[38;5;241m5[39m))
[1;32m---> 18[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;28mlen[39m([43mstopnie[49m)):
[0;32m     19[0m     ax [38;5;241m=[39m plt[38;5;241m.[39msubplot([38;5;241m1[39m, [38;5;28mlen[39m(degrees), i [38;5;241m+[39m [38;5;241m1[39m)
[0;32m     20[0m     plt[38;5;241m.[39msetp(ax, xticks[38;5;241m=[39m(), yticks[38;5;241m=[39m())

[1;31mNameError[0m: name 'stopnie' is not defined
NameError: name 'stopnie' is not defined

