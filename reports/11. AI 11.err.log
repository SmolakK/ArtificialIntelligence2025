Traceback (most recent call last):
  File "C:\Users\Saeid Haji-Aghajany\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Saeid Haji-Aghajany\anaconda3\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Saeid Haji-Aghajany\AppData\Roaming\Python\Python311\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Saeid Haji-Aghajany\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\Saeid Haji-Aghajany\anaconda3\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Saeid Haji-Aghajany\anaconda3\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Saeid Haji-Aghajany\anaconda3\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
import seaborn as sns
sns.set_style("whitegrid")

# Generate synthetic data
from sklearn.datasets import make_blobs
X, y_true = make_blobs(n_samples=300, centers=4, cluster_std=0.60, random_state=0)

# Plot the data
plt.scatter(X[:, 0], X[:, 1], s=50)
plt.title("Data Points")
plt.show()

# Apply K-Means
kmeans = KMeans(n_clusters=4)
kmeans.fit(X)

# Get cluster labels
y_kmeans = kmeans.predict(X)

# Plot the clusters
plt.scatter(X[:, 0], X[:, 1], c=y_kmeans, s=50, cmap='viridis')

# Plot the centroids
centers = kmeans.cluster_centers_
plt.scatter(centers[:, 0], centers[:, 1], c='red', s=200, alpha=0.75)
plt.title("K-Means Clustering")
plt.show()
------------------

----- stderr -----
C:\Users\Saeid Haji-Aghajany\anaconda3\Lib\site-packages\sklearn\cluster\_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning
  warnings.warn(
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mAttributeError[0m                            Traceback (most recent call last)
Cell [1;32mIn[1], line 18[0m
[0;32m     16[0m [38;5;66;03m# Apply K-Means[39;00m
[0;32m     17[0m kmeans [38;5;241m=[39m KMeans(n_clusters[38;5;241m=[39m[38;5;241m4[39m)
[1;32m---> 18[0m kmeans[38;5;241m.[39mfit(X)
[0;32m     20[0m [38;5;66;03m# Get cluster labels[39;00m
[0;32m     21[0m y_kmeans [38;5;241m=[39m kmeans[38;5;241m.[39mpredict(X)

File [1;32m~\anaconda3\Lib\site-packages\sklearn\cluster\_kmeans.py:1455[0m, in [0;36mKMeans.fit[1;34m(self, X, y, sample_weight)[0m
[0;32m   1453[0m [38;5;28;01melse[39;00m:
[0;32m   1454[0m     kmeans_single [38;5;241m=[39m _kmeans_single_lloyd
[1;32m-> 1455[0m     [38;5;28mself[39m[38;5;241m.[39m_check_mkl_vcomp(X, X[38;5;241m.[39mshape[[38;5;241m0[39m])
[0;32m   1457[0m best_inertia, best_labels [38;5;241m=[39m [38;5;28;01mNone[39;00m, [38;5;28;01mNone[39;00m
[0;32m   1459[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;28mself[39m[38;5;241m.[39m_n_init):
[0;32m   1460[0m     [38;5;66;03m# Initialize centers[39;00m

File [1;32m~\anaconda3\Lib\site-packages\sklearn\cluster\_kmeans.py:911[0m, in [0;36m_BaseKMeans._check_mkl_vcomp[1;34m(self, X, n_samples)[0m
[0;32m    909[0m n_active_threads [38;5;241m=[39m [38;5;28mint[39m(np[38;5;241m.[39mceil(n_samples [38;5;241m/[39m CHUNK_SIZE))
[0;32m    910[0m [38;5;28;01mif[39;00m n_active_threads [38;5;241m<[39m [38;5;28mself[39m[38;5;241m.[39m_n_threads:
[1;32m--> 911[0m     modules [38;5;241m=[39m threadpool_info()
[0;32m    912[0m     has_vcomp [38;5;241m=[39m [38;5;124m"[39m[38;5;124mvcomp[39m[38;5;124m"[39m [38;5;129;01min[39;00m [module[[38;5;124m"[39m[38;5;124mprefix[39m[38;5;124m"[39m] [38;5;28;01mfor[39;00m module [38;5;129;01min[39;00m modules]
[0;32m    913[0m     has_mkl [38;5;241m=[39m ([38;5;124m"[39m[38;5;124mmkl[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mintel[39m[38;5;124m"[39m) [38;5;129;01min[39;00m [
[0;32m    914[0m         (module[[38;5;124m"[39m[38;5;124minternal_api[39m[38;5;124m"[39m], module[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mthreading_layer[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m))
[0;32m    915[0m         [38;5;28;01mfor[39;00m module [38;5;129;01min[39;00m modules
[0;32m    916[0m     ]

File [1;32m~\anaconda3\Lib\site-packages\sklearn\utils\fixes.py:150[0m, in [0;36mthreadpool_info[1;34m()[0m
[0;32m    148[0m     [38;5;28;01mreturn[39;00m controller[38;5;241m.[39minfo()
[0;32m    149[0m [38;5;28;01melse[39;00m:
[1;32m--> 150[0m     [38;5;28;01mreturn[39;00m threadpoolctl[38;5;241m.[39mthreadpool_info()

File [1;32m~\anaconda3\Lib\site-packages\threadpoolctl.py:124[0m, in [0;36mthreadpool_info[1;34m()[0m
[0;32m    107[0m [38;5;129m@_format_docstring[39m(USER_APIS[38;5;241m=[39m[38;5;28mlist[39m(_ALL_USER_APIS),
[0;32m    108[0m                    INTERNAL_APIS[38;5;241m=[39m_ALL_INTERNAL_APIS)
[0;32m    109[0m [38;5;28;01mdef[39;00m [38;5;21mthreadpool_info[39m():
[0;32m    110[0m [38;5;250m    [39m[38;5;124;03m"""Return the maximal number of threads for each detected library.[39;00m
[0;32m    111[0m 
[0;32m    112[0m [38;5;124;03m    Return a list with all the supported modules that have been found. Each[39;00m
[1;32m   (...)[0m
[0;32m    122[0m [38;5;124;03m    In addition, each module may contain internal_api specific entries.[39;00m
[0;32m    123[0m [38;5;124;03m    """[39;00m
[1;32m--> 124[0m     [38;5;28;01mreturn[39;00m _ThreadpoolInfo(user_api[38;5;241m=[39m_ALL_USER_APIS)[38;5;241m.[39mtodicts()

File [1;32m~\anaconda3\Lib\site-packages\threadpoolctl.py:340[0m, in [0;36m_ThreadpoolInfo.__init__[1;34m(self, user_api, prefixes, modules)[0m
[0;32m    337[0m     [38;5;28mself[39m[38;5;241m.[39muser_api [38;5;241m=[39m [] [38;5;28;01mif[39;00m user_api [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m user_api
[0;32m    339[0m     [38;5;28mself[39m[38;5;241m.[39mmodules [38;5;241m=[39m []
[1;32m--> 340[0m     [38;5;28mself[39m[38;5;241m.[39m_load_modules()
[0;32m    341[0m     [38;5;28mself[39m[38;5;241m.[39m_warn_if_incompatible_openmp()
[0;32m    342[0m [38;5;28;01melse[39;00m:

File [1;32m~\anaconda3\Lib\site-packages\threadpoolctl.py:373[0m, in [0;36m_ThreadpoolInfo._load_modules[1;34m(self)[0m
[0;32m    371[0m     [38;5;28mself[39m[38;5;241m.[39m_find_modules_with_dyld()
[0;32m    372[0m [38;5;28;01melif[39;00m sys[38;5;241m.[39mplatform [38;5;241m==[39m [38;5;124m"[39m[38;5;124mwin32[39m[38;5;124m"[39m:
[1;32m--> 373[0m     [38;5;28mself[39m[38;5;241m.[39m_find_modules_with_enum_process_module_ex()
[0;32m    374[0m [38;5;28;01melse[39;00m:
[0;32m    375[0m     [38;5;28mself[39m[38;5;241m.[39m_find_modules_with_dl_iterate_phdr()

File [1;32m~\anaconda3\Lib\site-packages\threadpoolctl.py:485[0m, in [0;36m_ThreadpoolInfo._find_modules_with_enum_process_module_ex[1;34m(self)[0m
[0;32m    482[0m         filepath [38;5;241m=[39m buf[38;5;241m.[39mvalue
[0;32m    484[0m         [38;5;66;03m# Store the module if it is supported and selected[39;00m
[1;32m--> 485[0m         [38;5;28mself[39m[38;5;241m.[39m_make_module_from_path(filepath)
[0;32m    486[0m [38;5;28;01mfinally[39;00m:
[0;32m    487[0m     kernel_32[38;5;241m.[39mCloseHandle(h_process)

File [1;32m~\anaconda3\Lib\site-packages\threadpoolctl.py:515[0m, in [0;36m_ThreadpoolInfo._make_module_from_path[1;34m(self, filepath)[0m
[0;32m    513[0m [38;5;28;01mif[39;00m prefix [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprefixes [38;5;129;01mor[39;00m user_api [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39muser_api:
[0;32m    514[0m     module_class [38;5;241m=[39m [38;5;28mglobals[39m()[module_class]
[1;32m--> 515[0m     module [38;5;241m=[39m module_class(filepath, prefix, user_api, internal_api)
[0;32m    516[0m     [38;5;28mself[39m[38;5;241m.[39mmodules[38;5;241m.[39mappend(module)

File [1;32m~\anaconda3\Lib\site-packages\threadpoolctl.py:606[0m, in [0;36m_Module.__init__[1;34m(self, filepath, prefix, user_api, internal_api)[0m
[0;32m    604[0m [38;5;28mself[39m[38;5;241m.[39minternal_api [38;5;241m=[39m internal_api
[0;32m    605[0m [38;5;28mself[39m[38;5;241m.[39m_dynlib [38;5;241m=[39m ctypes[38;5;241m.[39mCDLL(filepath, mode[38;5;241m=[39m_RTLD_NOLOAD)
[1;32m--> 606[0m [38;5;28mself[39m[38;5;241m.[39mversion [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_version()
[0;32m    607[0m [38;5;28mself[39m[38;5;241m.[39mnum_threads [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_num_threads()
[0;32m    608[0m [38;5;28mself[39m[38;5;241m.[39m_get_extra_info()

File [1;32m~\anaconda3\Lib\site-packages\threadpoolctl.py:646[0m, in [0;36m_OpenBLASModule.get_version[1;34m(self)[0m
[0;32m    643[0m get_config [38;5;241m=[39m [38;5;28mgetattr[39m([38;5;28mself[39m[38;5;241m.[39m_dynlib, [38;5;124m"[39m[38;5;124mopenblas_get_config[39m[38;5;124m"[39m,
[0;32m    644[0m                      [38;5;28;01mlambda[39;00m: [38;5;28;01mNone[39;00m)
[0;32m    645[0m get_config[38;5;241m.[39mrestype [38;5;241m=[39m ctypes[38;5;241m.[39mc_char_p
[1;32m--> 646[0m config [38;5;241m=[39m get_config()[38;5;241m.[39msplit()
[0;32m    647[0m [38;5;28;01mif[39;00m config[[38;5;241m0[39m] [38;5;241m==[39m [38;5;124mb[39m[38;5;124m"[39m[38;5;124mOpenBLAS[39m[38;5;124m"[39m:
[0;32m    648[0m     [38;5;28;01mreturn[39;00m config[[38;5;241m1[39m][38;5;241m.[39mdecode([38;5;124m"[39m[38;5;124mutf-8[39m[38;5;124m"[39m)

[1;31mAttributeError[0m: 'NoneType' object has no attribute 'split'

